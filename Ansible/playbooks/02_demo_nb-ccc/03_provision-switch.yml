# Copyright (c) 2025 Cisco and/or its affiliates.
#
# This software is licensed to you under the terms of the Cisco Sample
# Code License, Version 1.1 (the "License"). You may obtain a copy of the
# License at
#
#                https://developer.cisco.com/docs/licenses
#
# All use of the material herein must be in accordance with the terms of
# the License. All rights not expressly granted by the License are
# reserved. Unless required by applicable law or agreed to separately in
# writing, software distributed under the License is distributed on an "AS
# IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied.

---
# Playbook to provision the planned switches definied in Netbox
# Usage: ansible-playbook playbooks/02_demo_nb-ccc/03_provision-switch.yml -i inventory/nb_inventory.yml
- name: Provision a wired device to a site
  hosts: brkops2357
  connection: local
  gather_facts: false

  vars:
    dnac_login: &dnac_login
      dnac_host: "{{ dnac_host }}"
      dnac_username: "{{ dnac_username }}"
      dnac_password: "{{ dnac_password }}"
      dnac_verify: "{{ dnac_verify }}"
      dnac_port: "{{ dnac_port }}"
      dnac_version: "{{ dnac_version }}"

  tasks:
    - name: Get Network Device Info and check managed status
      cisco.dnac.network_device_info:
        <<: *dnac_login
        managementIpAddress: "{{ hostvars[inventory_hostname].primary_ip4 }}"
      register: device_info_result
      until:
        - device_info_result.dnac_response.response[0].managedAtleastOnce == true
        - device_info_result.dnac_response.response[0].collectionStatus == "Managed"
        - device_info_result.dnac_response.response[0].reachabilityStatus == "Reachable"
        - device_info_result.dnac_response.response[0].pendingSyncRequestsCount == "0"
        - device_info_result.dnac_response.response[0].family == "Switches and Hubs"
      retries: 25
      delay: 15
      when: hostvars[inventory_hostname].status.value == "planned"

    - name: Provision a wired device to a site
      cisco.dnac.provision_intent:
        <<: *dnac_login
        config:
          - site_name: "Global/{{ hostvars[inventory_hostname].sites[0].tenant.name }}/{{ hostvars[inventory_hostname].sites[0].region.name }}/{{ hostvars[inventory_hostname].sites[0].name }}{{ '/'+hostvars[inventory_hostname].ccc_location if hostvars[inventory_hostname].ccc_location | default('') else '' }}"
            management_ip_address: "{{ hostvars[inventory_hostname].primary_ip4 }}"
      register: provisioning_result
      when: hostvars[inventory_hostname].status.value == "planned"
